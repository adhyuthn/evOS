alias functionNum R1;
alias currentPID R2;
alias returnValue R7;

if (functionNum == TERMINAL_WRITE) then
    multipush(R1, R2);
    R1 = ACQUIRE_TERMINAL;
    R2 = currentPID;
    call MOD_0;
    multipop(R1, R2);
    print R3;

    multipush(R1, R2);
    R1 = RELEASE_TERMINAL;
    R2 = currentPID;
    call MOD_0;
    returnValue = R0;
    multipop(R1, R2);
    return;
else
    if (functionNum == TERMINAL_READ) then
        multipush(R1, R2, R3);
        R1 = ACQUIRE_TERMINAL;
        R2 = currentPID;
        call MOD_0;
        multipop(R1, R2, R3);
        read;
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 4] = WAIT_TERMINAL;
        multipush(R1, R2, R3);
        call MOD_5;
        multipop(R1, R2, R3);
        // The Address in R3 is logical
        [[PTBR + 2 * (R3 / 512)] * 512 + (R3 % 512)] = [PROCESS_TABLE + currentPID * 16 + 8];
        return;
    else
        return;
    endif;
endif;
