// load libs
loadi(63,13);
loadi(64,14);

// load os startup code
loadi(65,7);
loadi(66,8);

// load INT 10 
loadi(22,35);
loadi(23,36);

// load Exhandler
loadi(2,15);
loadi(3,16);

// load writer interrupt
loadi(16,29);
loadi(17,30);

// load idle process
loadi(69,11);
loadi(70,12);

// load timer interrupt
loadi(4, 17);
loadi(5, 18);


PTBR = PAGE_TABLE_BASE;

// IDLE's PAGE TABLE
// Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";


//INIT's PAGE TABLE
// user Lib space
PTBR = PAGE_TABLE_BASE + 20;
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

// user Heap space
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

// user Code space
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// user Stack space
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

// Setup Process Table

// For IDLE process
// User Area
// PID of proces
[PROCESS_TABLE + 1] = 0;
// STATE of the IDLE process state is set to CREATED
[PROCESS_TABLE + 4] = CREATED; 
// User Area for the IDLE process
[PROCESS_TABLE + 11] = 82;
// UPTR of IDLE
[PROCESS_TABLE + 13] = 8*512;
// KPTR of IDLE
[PROCESS_TABLE + 12] = 0;
// PTBR
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
// PTLR
[PROCESS_TABLE + 15] = 10;

// For INIT process
// PID of process
[PROCESS_TABLE + 17] = 1;
// User Area
[PROCESS_TABLE + 27] = 80;
// STATE of the INIT process state is set to RUNNING
[PROCESS_TABLE + 20] = RUNNING;
// UPTR
[PROCESS_TABLE + 29] = 8*512;
// KPTR of IDLE
[PROCESS_TABLE + 28] = 0;
// PTBR
[PROCESS_TABLE + 30] = PAGE_TABLE_BASE + 20;
// PTLR
[PROCESS_TABLE + 31] = 10;



// System status table
// PID of currrent process
[SYSTEM_STATUS_TABLE + 1] = 1;

// The INIT is the first user program (PTBR has been set)
SP = 8*512;
PTLR = 10;
[76 * 512] = [65 * 512 + 1];
[81 * 512] = [69 * 512 + 1];

ireturn;
