// load BOOT_MODULE
loadi(54,67);
loadi(55,68);

// load idle process
loadi(69,11);

// Prepare Stack for Calling BOOT Module
SP = 76*512 - 1;

call BOOT_MODULE;

// ----INIT SETUP----
PTBR = PAGE_TABLE_BASE;
PTLR = 10;

// IDLE's PAGE TABLE
// Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 70;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

// For IDLE process
// User Area
// PID of proces
[PROCESS_TABLE + 1] = 0;
// UID of proces
[PROCESS_TABLE + 3] = 0;
// STATE of the IDLE process state is set to RUNNING
[PROCESS_TABLE + 4] = RUNNING; 
// User Area for the IDLE process
[PROCESS_TABLE + 11] = 76;
// KPTR of IDLE
[PROCESS_TABLE + 12] = 0;
// UPTR of IDLE
[PROCESS_TABLE + 13] = 8*512;
// PTBR
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
// PTLR
[PROCESS_TABLE + 15] = 10;

SP = 8*512;
[70 * 512] = [69 * 512 + 1];

// ----SWAPPER SETUP----
PTBR = PAGE_TABLE_BASE + 15 * 20;
PTLR = 10;

// SWAPPER's PAGE TABLE
// Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

// For SWAPPER process
// User Area
// PID of proces
[PROCESS_TABLE + 1] = 15;
// UID of proces
[PROCESS_TABLE + 3] = 0;
// STATE of the SWAPPER process state is set to CREATED
[PROCESS_TABLE + 4] = CREATED; 
// User Area for the SWAPPER process
[PROCESS_TABLE + 11] = 82;
// KPTR of SWAPPER
[PROCESS_TABLE + 12] = 0;
// UPTR of SWAPPER
[PROCESS_TABLE + 13] = 8*512;
// PTBR
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE + 15 * 20;
// PTLR
[PROCESS_TABLE + 15] = 10;

[81 * 512] = [69 * 512 + 1];

PTBR = PAGE_TABLE_BASE;
PTLR = 10;
SP = 8*512;
// IDLE is the first process.
[SYSTEM_STATUS_TABLE + 1] = 0;

ireturn;
