alias userSP R0;
alias sysCallNum R1;
alias physicalAddrRetVal R2;
userSP = SP;

sysCallNum = [([PTBR + 2 * ((userSP - 5) / 512)] * 512) + ((userSP - 5) % 512)];
physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);

// Store SP in UPTR
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = userSP;

// Switcht to the kernel stack of the process
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;
// ----------------------

if (sysCallNum == INT_WAIT) then 
    alias waitPID R3;
    alias currentPID R4;
    currentPID = [SYSTEM_STATUS_TABLE + 1];
    [PROCESS_TABLE + currentPID * 16 + 9] = INT_WAIT;
    waitPID = [([PTBR + 2 * ((userSP - 4) / 512)] * 512) + ((userSP - 4) % 512)];
    // looks sensible to not wait for IDLE
    if (waitPID != currentPID && 
        waitPID > 0 && 
        [PROCESS_TABLE + waitPID * 16 + 4] != TERMINATED) then

        [PROCESS_TABLE + waitPID * 16 + 4] = WAIT_PROCESS;
        [PROCESS_TABLE + waitPID * 16 + 5] = waitPID;
        multipush(R0, R2, R4);
        call MOD_5;
        multipop(R0, R2, R4);
        [PROCESS_TABLE + currentPID * 16 + 9] = 0;
        [physicalAddrRetVal] = 0;
        SP = userSP;
        ireturn;
    else 
        [physicalAddrRetVal] = -1;
        [PROCESS_TABLE + currentPID * 16 + 9] = 0;
        SP = userSP;
        ireturn;
    endif;
endif;

if (sysCallNum == INT_SIGNAL) then
    alias currentPID R3;
    alias waitPID R4;
    currentPID = [SYSTEM_STATUS_TABLE + 1];
    waitPID = 0;
    [PROCESS_TABLE + currentPID * 16 + 9] = INT_SIGNAL;
    while (waitPID < 16) do 
        if ([PROCESS_TABLE + waitPID * 16 + 4] == WAIT_PROCESS && 
            [PROCESS_TABLE + waitPID * 16 + 5] == currentPID) then
            
            [PROCESS_TABLE + waitPID * 16 + 4] = READY;
            [PROCESS_TABLE + currentPID * 16 + 9] = 0;
            [physicalAddrRetVal] = 0;
            SP = userSP;
            ireturn;
        endif;
    endwhile;
endif;

if (sysCallNum == INT_GETPID) then
    alias currentPID R3;
    currentPID = [SYSTEM_STATUS_TABLE + 1];
    [physicalAddrRetVal] = [PROCESS_TABLE + currentPID * 16 + 1];
    SP = userSP;
    ireturn;
endif;

if (sysCallNum == INT_GETPPID) then
    alias currentPID R3;
    currentPID = [SYSTEM_STATUS_TABLE + 1];
    [physicalAddrRetVal] = [PROCESS_TABLE + currentPID * 16 + 2];
    SP = userSP;
    ireturn;
endif;
